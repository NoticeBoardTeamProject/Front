name: Frontend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'Front/**'
  pull_request:
    branches:
      - main
    paths:
      - 'Front/**'
  workflow_dispatch:

jobs:
  test-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Front/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: Front

      - name: Run tests
        run: npm test
        working-directory: Front
        if: always()

      - name: Build application
        run: npm run build
        working-directory: Front

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: Front/dist/
          retention-days: 1

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: test-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: dist

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -euxo pipefail
            
            sudo mkdir -p /opt/app/frontend-build
            sudo mkdir -p /opt/app/Front
            
            sudo chown -R $USER:$USER /opt/app/frontend-build
            sudo chown -R $USER:$USER /opt/app/Front
            
            echo "Copying build files..."
            rsync -av --delete ./dist/ /opt/app/frontend-build/
            
            if [ -f "/opt/app/Front/nginx.conf" ]; then
              sudo cp /opt/app/Front/nginx.conf /opt/app/frontend-build/
            fi
            
            if docker compose ps | grep -q nginx; then
              echo "Restarting nginx container..."
              docker compose restart nginx
            else
              echo "Nginx container not running, starting services..."
              cd /opt/app
              docker compose up -d
            fi
            
            sleep 5
            docker compose ps
            
            echo "Deployment completed successfully!"
            echo "Application should be available at: http://${{ secrets.SERVER_IP }}"
